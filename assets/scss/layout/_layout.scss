.l-container {
    max-width: $max-width;
    padding: 1.25rem;
    display: flex;
    flex-direction: column;
    margin-right: auto;
    margin-left: auto;
    flex-wrap: wrap;
    justify-content: center;
}

.center-block {
    margin-left: auto;
    margin-right: auto;
}

.center-content {
    text-align: center;
}

// Generar clases de tama単o de fuente del 1 al 20
@for $i from 1 through 20 {
  .fs-#{$i} {
    font-size: $i * 0.25rem;
  }
}


// Clases para el ancho
.w-1-2 { width: 50%; }
.w-1-3 { width: 33.33333%; }
.w-1-4 { width: 25%; }
.w-1-5 { width: 20%; }
.w-2-3 { width: 66.66666%; }
.w-2-5 { width: 40%; }
.w-3-4 { width: 75%; }
.w-3-5 { width: 60%; }
.w-4-5 { width: 80%; }
.w-full { width: 100%; }

// Media queries para diferentes tama単os de pantalla
@each $bp, $value in $breakpoints {
    @include from($bp) {
        .w-1-2-#{$bp} { width: 50%; }
        .w-1-3-#{$bp} { width: 33.33333%; }
        .w-1-4-#{$bp} { width: 25%; }
        .w-1-5-#{$bp} { width: 20%; }
        .w-2-3-#{$bp} { width: 66.66666%; }
        .w-2-5-#{$bp} { width: 40%; }
        .w-3-4-#{$bp} { width: 75%; }
        .w-3-5-#{$bp} { width: 60%; }
        .w-4-5-#{$bp} { width: 80%; }
        .w-full-#{$bp} { width: 100%; }
    }
}

@for $i from 1 through 100 {
    .w-#{$i} {
        width: #{$i * 0.25}rem;
    }
}

@for $i from 1 through 100 {
    .w-p-#{$i} {
        width: #{$i * 1px};
    }
}

@for $i from 1 through 100 {
    .h-#{$i} {
        height: #{$i * 0.25}rem;
    }
}

@each $bp, $value in $breakpoints {
    @include from($bp) {
        @for $i from 1 through 100 {
            .h-#{$i}-#{$bp} {
                height: #{$i * 0.5}rem;
            }
        }
    }
}


@for $i from 1 through 100 {
    .h-p-#{$i} {
        height: #{$i * 1px};
    }
}

// Generar clases de padding
@for $i from 1 through 30 {
    .p-#{$i} {
        padding: #{$i * 0.15}rem;

        @include from(l) {
            padding: #{$i * 0.20}rem;
        }
        @include from(xl) {
            padding: #{$i * 0.25}rem;
        }
    }

    .py-#{$i} {
        padding-top: #{$i * 0.15}rem;
        padding-bottom: #{$i * 0.15}rem;

        @include from(l) {
            padding-top: #{$i * 0.20}rem;
            padding-bottom: #{$i * 0.20}rem;
        }

        @include from(xl) {
            padding-top: #{$i * 0.25}rem;
            padding-bottom: #{$i * 0.25}rem;
        }
    }

    .px-#{$i} {
        padding-left: #{$i * 0.15}rem;
        padding-right: #{$i * 0.15}rem;

        @include from(l) {
            padding-left: #{$i * 0.20}rem;
            padding-right: #{$i * 0.20}rem;
        }

        @include from(xl) {
            padding-left: #{$i * 0.25}rem;
            padding-right: #{$i * 0.25}rem;
        }
    }

    // Clases para padding individual
    .pt-#{$i} {
        padding-top: #{$i * 0.15}rem;

        @include from(l) {
            padding-top: #{$i * 0.20}rem;
        }

        @include from(xl) {
            padding-top: #{$i * 0.25}rem;
        }
    }

    .pb-#{$i} {
        padding-bottom: #{$i * 0.15}rem;

        @include from(l) {
            padding-bottom: #{$i * 0.20}rem;
        }

        @include from(xl) {
            padding-bottom: #{$i * 0.25}rem;
        }
    }
}

// Generar clases de margin
.m-0 {
    margin: 0;
}

.m-auto {
    margin: auto;
}

.my-auto {
    margin: auto 0;
}

.mx-auto {
    margin: 0 auto;
}

@for $i from 1 through 16 {
    .m-#{$i} {
        margin: #{$i * 0.15}rem;

        @include from(l) {
            margin: #{$i * 0.20}rem;
        }

        @include from(xl) {
            margin: #{$i * 0.25}rem;
        }
    }

    .my-#{$i} {
        margin-top: #{$i * 0.15}rem;
        margin-bottom: #{$i * 0.15}rem;
        
        @include from(l) {
            margin-top: #{$i * 0.20}rem;
            margin-bottom: #{$i * 0.20}rem;
        }

        @include from(xl) {
            margin-top: #{$i * 0.25}rem;
            margin-bottom: #{$i * 0.25}rem;
        }
    }

    .mx-#{$i} {
        margin-left: #{$i * 0.15}rem;
        margin-right: #{$i * 0.15}rem;
        
        @include from(l) {
            margin-left: #{$i * 0.20}rem;
            margin-right: #{$i * 0.20}rem;
        }

        @include from(xl) {
            margin-left: #{$i * 0.25}rem;
            margin-right: #{$i * 0.25}rem;
        }
    }

    // Clases para margin individual
    .mt-#{$i} {
        margin-top: #{$i * 0.15}rem;
        
        @include from(l) {
            margin-top: #{$i * 0.20}rem;
        }

        @include from(xl) {
            margin-top: #{$i * 0.25}rem;
        }
    }

    .mb-#{$i} {
        margin-bottom: #{$i * 0.15}rem;
        
        @include from(l) {
            margin-bottom: #{$i * 0.20}rem;
        }

        @include from(xl) {
            margin-bottom: #{$i * 0.25}rem;
        }
    }

    .ml-#{$i} {
        margin-left: #{$i * 0.15}rem;
        
        @include from(l) {
            margin-left: #{$i * 0.20}rem;
        }

        @include from(xl) {
            margin-left: #{$i * 0.25}rem;
        }
    }

    .mr-#{$i} {
        margin-right: #{$i * 0.15}rem;
        
        @include from(l) {
            margin-right: #{$i * 0.20}rem;
        }

        @include from(xl) {
            margin-right: #{$i * 0.25}rem;
        }
    }
}

@for $i from 1 through 100 {

    .b-radius-#{$i} {
        border-radius: #{$i * 0.25}rem;
    }
}


// Grid
.grid {
    display: grid;

    // Generar clases de espacio
    @for $i from 1 through 16 {
        &.gap-#{$i} {
            gap: #{$i * 0.25}rem;
        }
    }

    // Generar columnas por defecto
    @for $cols from 1 through 4 {
        &.grid-cols-#{$cols} {
            grid-template-columns: repeat(#{$cols}, 1fr);
        }
    }

    // Generar clases de columnas por breakpoint
    @each $bp, $value in $breakpoints {
        @include from($bp) {
            @for $cols from 1 through 4 {
                &.grid-cols-#{$bp}-#{$cols} {
                    grid-template-columns: repeat(#{$cols}, 1fr);
                }
            }
        }
    }
}

.flex {
    display: flex;

    &.flex-wrap {
        flex-wrap: wrap;
        @each $bp, $value in $breakpoints {
            @include from($bp) {
                &-#{$bp} {
                    flex-wrap: wrap; // Calcula el porcentaje
                }
            }
        }
    }

    &.flex-column {
        flex-direction: column;

        @each $bp, $value in $breakpoints {
            @include from($bp) {
                &-#{$bp} {
                    flex-direction: column; // Calcula el porcentaje
                }
            }
        }
    }

    &.flex-row {
        flex-direction: row;

        @each $bp, $value in $breakpoints {
            @include from($bp) {
                &-#{$bp} {
                    flex-direction: row; // Calcula el porcentaje
                }
            }
        }
    }

    // Clases para justify-content
    &.justify-start { justify-content: flex-start; }
    &.justify-center { justify-content: center; }
    &.justify-end { justify-content: flex-end; }
    &.justify-between { justify-content: space-between; }
    &.justify-around { justify-content: space-around; }
    &.justify-evenly { justify-content: space-evenly; }

    // Media queries para diferentes justify-content
    @each $bp, $value in $breakpoints {
        @include from($bp) {
            &.justify-start-#{$bp} { justify-content: flex-start; }
            &.justify-center-#{$bp} { justify-content: center; }
            &.justify-end-#{$bp} { justify-content: flex-end; }
            &.justify-between-#{$bp} { justify-content: space-between; }
            &.justify-around-#{$bp} { justify-content: space-around; }
            &.justify-evenly-#{$bp} { justify-content: space-evenly; }
        }
    }
    
    // Clases para align-items
    &.items-start { align-items: flex-start; }
    &.items-center { align-items: center; }
    &.items-end { align-items: flex-end; }
    &.items-baseline { align-items: baseline; }
    &.items-stretch { align-items: stretch; }
    
    // Media queries para diferentes align-items
    @each $bp, $value in $breakpoints {
        @include from($bp) {
            &.items-start-#{$bp} { align-items: flex-start; }
            &.items-center-#{$bp} { align-items: center; }
            &.items-end-#{$bp} { align-items: flex-end; }
            &.items-baseline-#{$bp} { align-items: baseline; }
            &.items-stretch-#{$bp} { align-items: stretch; }
        }
    }

    // Clases para gap
    @for $i from 1 through 16 {
        &.gap-#{$i} {
            gap: #{$i * 0.25}rem;
        }
    }

    // Clases para flex-grow
    .flex-grow-0 { flex-grow: 0; }
    .flex-grow-1 { flex-grow: 1; }

    // Clases para flex-shrink
    .flex-shrink-0 { flex-shrink: 0; }
    .flex-shrink-1 { flex-shrink: 1; }

    // Clases para flex-basis
    @for $i from 1 through 16 {
        .flex-basis-#{$i} {
            flex-basis: #{$i * 0.25}rem; // Tama単o base
        }
    }

    // Media queries para diferentes tama単os de pantalla
    @each $bp, $value in $breakpoints {
        @include from($bp) {
            .w-1-2-#{$bp} { width: 50%; }
            .w-1-3-#{$bp} { width: 33.33333%; }
            .w-2-3-#{$bp} { width: 66.66666%; }
            .w-1-4-#{$bp} { width: 25%; }
            .w-3-4-#{$bp} { width: 75%; }
            .w-full-#{$bp} { width: 100%; }
        }
    }
}
